@model IEnumerable<BookShop1.Models.Book>

@{
    ViewData["Title"] = "Index";
}

<style>
    body {
        background-color: #f5f5f5;
        font-family: Arial, sans-serif;
    }

    .jumbotron {
        background-color: #6c757d;
        color: white;
        padding: 2rem 1rem;
        margin-bottom: 2rem;
        border-radius: 0.3rem;
    }

    .jumbotron-heading {
        font-size: 2.5rem;
        font-weight: bold;
    }

    .album {
        background-color: #f8f9fa;
        padding: 2rem 0;
    }

    .card {
        border: none;
        border-radius: 0.5rem;
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);
    }

    .card-img-top {
        border-top-left-radius: 0.5rem;
        border-top-right-radius: 0.5rem;
    }

    .card-body {
        padding: 1.25rem;
    }

    .card-text {
        font-size: 1.1rem;
        color: #333;
    }

    .btn-group a, .btn-group button {
        margin-right: 0.5rem;
        color: #007bff;
        text-decoration: none;
    }

        .btn-group a:hover, .btn-group button:hover {
            color: #0056b3;
        }

    .add-to-cart-button {
        background-color: #ffc107;
        color: #fff;
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 0.25rem;
        cursor: pointer;
    }

        .add-to-cart-button:hover {
            background-color: #e0a800;
        }

    .cart-container {
        margin-top: 2rem;
        padding: 1rem;
        border: 1px solid #ddd;
        border-radius: 0.5rem;
        background-color: #fff;
    }

    .cart-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.5rem 0;
        border-bottom: 1px solid #ddd;
    }

        .cart-item:last-child {
            border-bottom: none;
        }

    .buy-button {
        background-color: #28a745;
        color: #fff;
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 0.25rem;
        cursor: pointer;
        margin-top: 1rem;
    }

        .buy-button:hover {
            background-color: #218838;
        }

    .notification {
        position: fixed;
        bottom: 10px;
        right: 10px;
        background-color: #28a745;
        color: #fff;
        padding: 1rem;
        border-radius: 0.25rem;
        display: none;
    }

    .added-message {
        color: #28a745;
        font-weight: bold;
    }
</style>

<section class="jumbotron text-center">
    <div class="container">
        <h1 class="jumbotron-heading">Book Shop</h1>
    </div>
</section>

@if (User.IsInRole("Admin"))
{
     <p>
     <a asp-action="Create">Create New</a>
     </p>
}

<div class="album py-5 bg-light">
    <div class="container">
        <div class="row">
            @foreach (var item in Model)
            {
                <div class="col-md-4">
                    <div class="card mb-4 box-shadow">
                        <img class="card-img-top" src="@item.FrontPage" alt="Card image " height="300px" width="190px">
                        <div class="card-body">
                            <h2 class="card-text">Title: @item.Title</h2>
                            <p class="card-text">Author: @item.Author.FirstName @item.Author.LastName</p>
                            <div class="d-flex justify-content-between align-items-center">
                                <div class="btn-group">
                                    @if (User.IsInRole("Admin"))
                                    {
                                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                                    }
                                    |
                                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                                      @if(User.IsInRole("Admin")){

                                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                                      }
                                </div>
                                @if (User.Identity.IsAuthenticated)
                                {

                                    <button class="add-to-cart-button" onclick="addToCart('@item.Title', this)">Add to Cart</button>
                                    <small class="text-muted">9 mins</small>
                                }
                            </div>
                            <div class="added-message" style="display: none;">Added to cart!</div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div class="container cart-container">
    <h2>Shopping Cart</h2>
    <div id="cartItems"></div>
    <button class="buy-button" onclick="buyBooks()">Buy</button>
</div>

<div class="notification" id="cartNotification">
    The list of added books is at the bottom of the site.
</div>
@if (User.Identity.IsAuthenticated)
{

<script>
    var cart = [];

    function addToCart(bookTitle, button) {
        cart.push(bookTitle);
        displayCart();
        showNotification();
        showAddedMessage(button, bookTitle);
    }

    function displayCart() {
        var cartItemsDiv = document.getElementById('cartItems');
        cartItemsDiv.innerHTML = '';
        cart.forEach(function (book, index) {
            var cartItemDiv = document.createElement('div');
            cartItemDiv.classList.add('cart-item');
            cartItemDiv.innerHTML = book + '<button onclick="removeFromCart(' + index + ', \'' + book + '\')">Remove</button>';
            cartItemsDiv.appendChild(cartItemDiv);
        });
    }

    function removeFromCart(index, bookTitle) {
        cart.splice(index, 1);
        displayCart();
        hideAddedMessage(bookTitle);
    }

    function buyBooks() {
        if (cart.length > 0) {
            alert('Thank you for shopping at our Book Shop!');
            cart = [];
            displayCart();
            document.querySelectorAll('.added-message').forEach(function (message) {
                message.style.display = 'none';
            });
        } else {
            alert('Your cart is empty!');
        }
    }

    function showNotification() {
        var notification = document.getElementById('cartNotification');
        notification.style.display = 'block';
        setTimeout(function () {
            notification.style.display = 'none';
        }, 3000);
    }

    function showAddedMessage(button, bookTitle) {
        var message = button.closest('.card-body').querySelector('.added-message');
        message.style.display = 'block';
        message.dataset.bookTitle = bookTitle;
    }

    function hideAddedMessage(bookTitle) {
        document.querySelectorAll('.added-message').forEach(function (message) {
            if (message.dataset.bookTitle === bookTitle) {
                message.style.display = 'none';
            }
        });
    }
</script>
}